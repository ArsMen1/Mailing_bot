from random import choice
from re import findall
from shp_mailing_bot.config import RESPONSIBLE_FOR_THE_BOT, GRADE_INFO_STATE_LINK
from tabulate import tabulate
from logger_bot import logger

are_you_really_prep_message = '–ù–µ –º–æ–≥—É –≤–∞—Å –Ω–∞–π—Ç–∏ –≤ –º–æ–µ–π —Ç–µ—Ç—Ä–∞–¥–æ—á–∫–µ, –≤—ã —Ç–æ—á–Ω–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å? ü•∏\n' \
                              f'–ï—Å–ª–∏ –¥–∞, —Ç–æ —Å–∫–∞–∂–∏—Ç–µ –ø—Ä–æ —ç—Ç–æ –º–æ–µ–π –º–∞–º–æ—á–∫–µ {RESPONSIBLE_FOR_THE_BOT}, ' \
                              f'–æ–Ω–∞ –≤–∞—Å –∑–∞–ø–∏—à–µ—Ç –∫–∞—Ä–∞–Ω–¥–∞—à–æ–º.'


# def ok_message() -> str:
#     ok_phrases = (
#         '–û–∫',
#         '–ü—Ä–∏–Ω—è—Ç–æ',
#         '–í—Å—ë —è—Å–Ω–æ',
#         '–í–æ—Å–ø—Ä–∏–Ω—è—Ç–æ',
#         '–ü–æ–Ω—è—Ç–Ω–æ –≤—Å—ë',
#         '–ê–≥–∞, –ø–æ–Ω—è—Ç–Ω–æ',
#         '–û–∫, —Å–ø–∞—Å–∏–±–æ',
#         '–û–±—â–µ–ø–æ–Ω—è—Ç–Ω–æ',
#         '–°—Ö–≤–∞—á–µ–Ω–æ',
#         '–ü—Ä–∏–Ω—è—Ç–æ',
#         '–î–æ—Å—Ç—É–ø–Ω–æ',
#         '–®–ü–∞—Å–∏–±–æ, –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ'
#     )
#
#     return choice(ok_phrases)


def kd_link_message() -> str:
    db_phrases = (
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞.',
        '–û–π! –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑—ã –Ω–∞ –æ–¥–Ω—É –º–∞–ª–µ–Ω—å–∫—É—é –∫–Ω–æ–ø–∫—É –ø—Ä–µ–≤—ã—à–µ–Ω–∞ ü§ì',
        '–ë–∞–∑–∞ –ó–Ω–∞–Ω–∏–π –æ–±–∏—Ç–∞–µ—Ç —Ç—É—Ç: ',
        '–í–æ—Ç —Å—Å—ã–ª–æ—á–∫–∞. –ò –±–æ–ª—å—à–µ –Ω–µ —Ç–µ—Ä—è–π—Ç–µ üôÉ',
        '–í–æ—Ç –∂–µ –æ–Ω–∞!',
        '–ù–∞–¥–µ—é—Å—å, –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ, —á—Ç–æ –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ —Ö—Ä–∞–º —Ü–µ–Ω–Ω–µ–π—à–∏—Ö –∑–Ω–∞–Ω–∏–π –®–ü. –í–µ–¥–∏—Ç–µ —Å–µ–±—è —Ç–∏—Ö–æ ü§´',
        '–ü–æ—Ç–µ—Ä—è–ª–∏ –ë–∞–∑—É –ó–Ω–∞–Ω–∏–π? –õ–∞–∞–¥–Ω–æ, –¥–µ—Ä–∂–∏—Ç–µ üòå',
        '–ó–Ω–∞–∫–æ–º—å—Ç–µ—Å—å, –Ω–∞—à–∞ –≥–ª—É–±–æ–∫–æ —É–≤–∞–∂–∞–µ–º–∞—è –ë–∞–∑–∞ –ó–Ω–∞–Ω—å–µ–≤–Ω–∞ –®–ü–≤–æ–≤–Ω–∞ ',
        '–í–æ—Ç, –Ω–µ –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç–µ',
        '–í–æ—Ç –æ–Ω, –Ω–∞—à —Å–≤—è–æ–π –≥—Ä–∞–∞–ª—å, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å —Å –Ω–∏–º –±–µ—Ä–µ–∂–Ω–æ'
    )

    return choice(db_phrases)


def evaluation_indicator_message(grade: int = None) -> str:  # get comment for nps or retirement

    # phrases
    grade_3_indicators_comment = (
        '–ö–∞–π—Ñ :)',
        '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ü§©',
        '–í–∞—É –≤–∞—É üòÄ',
        '–í–∞—Å —Ç–∞–∫ –ª—é–±—è—Ç —É—á–µ–Ω–∏–∫–∏ ü•∞',
        '–û—Ç–ª–∏—á–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ üòå',
        '–û–≥–æ-–≥–æ, –∑–¥–æ—Ä–æ–≤–æ :)',
        '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ ‚ò∫Ô∏è',
        '–í—ã—Å—à–∏–π –ø–∏–ª–æ—Ç–∞–∂ ‚úàÔ∏è',
        '–ù–∏—á–µ–≥–æ —Å–µ–±–µ, –≤–æ—Ç —ç—Ç–æ –∫–ª–∞—Å—Å!',
        '–û–π, –∏–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ—Å—Ç–∏—Ç–µ, —è —á—Ç–æ, —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—é —Å –Ω–∞—Ä–æ–¥–Ω—ã–º –ª—é–±–∏–º—Ü–µ–º??',
        '–ê –º–æ–∂–Ω–æ –≤–∞—à –∞–≤—Ç–æ–≥—Ä–∞—Ñ?)',
        '–≠—Ç–æ –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ —É—Å–ø–µ—Ö üòé',
        '–û–±—Ä–∞–∑—Ü–æ–≤–æ-–ø–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç)',
        '–Æ—Ö—É—É ü§†',
        '–°–∏–ª—å–Ω–æ...',
        '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ üôÇ',
        '–ó–∞ –≤–∞–º–∏ —É–∂–µ –≤—ã–µ—Ö–∞–ª–∞ –ø–æ–ª–∏—Ü–∏—è –∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Ö–æ—Ä–æ—à–µ—Å—Ç–∏!!!',
        '–ó–Ω–∞–µ—Ç–µ, —è —Ö–æ—Ç–µ–ª –±—ã, —á—Ç–æ–±—ã –º–µ–Ω—è —Ç–æ–∂–µ —Ç–∞–∫ –∫—Ç–æ-–Ω–∏–±—É–¥—å –ª—é–±–∏–ª –∫–∞–∫ –≤–∞—Å –ª—é–±—è—Ç –¥–µ—Ç–∏ ü•∫'
    )

    grade_2_indicators_comment = (
        '–•–æ—Ä–æ—à–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ ‚ò∫Ô∏è',
        '–ù–µ–ø–ª–æ—Ö–æ!',
        '–ó–¥–æ—Ä–æ–≤–æ–æ–æ',
        '–ß—É–¥–µ—Å–Ω–æ!',
        '–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç üôÇ',
        '–°—Ç–∞–±–∏–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏, –∑–¥–æ—Ä–æ–≤–æ)',
        '–û—á–µ–Ω—å –Ω–µ–ø–ª–æ—Ö–æ. –î–∞–ª—å—à–µ ‚Äî –±–æ–ª—å—à–µ üí™',
        '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!',
        '–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!',
        "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
        '–í–∞—É, –∫—Ä—É—Ç–æ üòÑ',
        "–°–∏–ª—å–Ω–æ..."
    )

    grade_1_indicators_comment = (
        "–ù–µ–ø–ª–æ—Ö–æ! –î–∞–ª—å—à–µ ‚Äî –±–æ–ª—å—à–µ üí™",
        "–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç :)",
        "–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ò –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –∑–¥–µ—Å—å —Ç–æ, —á—Ç–æ –µ—Å—Ç—å –º–µ—Å—Ç–æ –¥–ª—è —Ä–æ—Å—Ç–∞ :)"
    )

    grade_0_indicators_comment = (
        '–ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫–∞—Ç—å –µ—â—ë –ø–æ–¥—Ö–æ–¥ –∫ —Ä–µ–±—è—Ç–∞–º. –ù–µ–ø–æ–±–µ–¥–∏–º—ã—Ö –Ω–µ –±—ã–≤–∞–µ—Ç üí™',
        '–í—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é :)',
        '–ï—Å–ª–∏ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ª—é–±–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É –í–£–¶ üôÇ',
        "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ –∑–¥–µ—Å—å —Ç–æ, —á—Ç–æ –µ—Å—Ç—å –º–µ—Å—Ç–æ –¥–ª—è —Ä–æ—Å—Ç–∞ üòÑ"
    )

    comments_grade = (
        grade_0_indicators_comment, grade_1_indicators_comment, grade_2_indicators_comment, grade_3_indicators_comment)

    return choice(comments_grade[grade])


def get_name_patronymic(name: str):
    name = name.split()
    if len(name) == 3 or len(name) == 4:  # 4 -- could be maiden name
        return " ".join(name[-2:])
    elif len(name) == 2:
        return name[-1]


def indicators_message(nps: str,
                       positive: str,
                       negative: str,
                       neutral: str,
                       retirement: str,
                       average_nps: str,
                       average_retirement: str,
                       redflags: str,
                       sem_pointer) -> str:
    """
    Returns a message and an indicators flag (are there indicators or not)
    """

    # nps_comment = ""
    # retirement_comment = ""
    #
    # if actual_sem_flag:
    #     nps_comment = f'üí≠ `{evaluation_indicator_message(nps=nps)}`'
    #     retirement_comment = f'üí≠ `{evaluation_indicator_message(retirement=retirement)}`'

    message = f'üìå *–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏*'

    if nps:
        message += f'\n\n' \
                   f'*–í–∞—à NPS ‚Äî {nps}%.*\n' \
                   f'–°—Ä–µ–¥–Ω–∏–π NPS –ø–æ —à–∫–æ–ª–µ ‚Äî {average_nps}%.\n'
    else:
        message += '\n\n' \
                   '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–º—É NPS —è –Ω–µ –Ω–∞—à—ë–ª –≤ —Å–≤–æ–µ–π –∫–Ω–∏–∂–µ—á–∫–µ üßê\n' \
                   f'–ï—Å–ª–∏ –≤—ã –¥—É–º–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫  {RESPONSIBLE_FOR_THE_BOT}'

    if any((positive, negative, neutral)):
        message += f"\n–ì–æ–ª–æ—Å–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å —Ç–∞–∫:\n" \
                   f"`–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ ‚Äî {positive}\n" \
                   f"–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ ‚Äî {negative}\n" \
                   f"–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ   ‚Äî {int(neutral) + int(retirement)}\n" \
                   f"(–∏–∑ –Ω–∏—Ö {retirement} –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏ –æ–±—É—á–µ–Ω–∏–µ –≤ —à–∫–æ–ª–µ)`"

    if retirement and sem_pointer < 6:  # if sem 21/22-I and +
        message += f'\n\n' \
                   f'*–í–∞—à–∞ –≤—ã–±—ã–≤–∞–µ–º–æ—Å—Ç—å ‚Äî {retirement}%.*\n' \
                   f'–°—Ä–µ–¥–Ω—è—è –≤—ã–±—ã–≤–∞–µ–º–æ—Å—Ç—å –ø–æ —à–∫–æ–ª–µ ‚Äî {average_retirement}%.\n'
    elif sem_pointer < 6:
        message += '\n\n' \
                   '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–π –≤—ã–±—ã–≤–∞–µ–º–æ—Å—Ç–∏ —è –Ω–µ –Ω–∞—à—ë–ª –≤ —Å–≤–æ–µ–π –∫–Ω–∏–∂–µ—á–∫–µ üßê\n' \
                   f'–ï—Å–ª–∏ –≤—ã –¥—É–º–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫  {RESPONSIBLE_FOR_THE_BOT}'

    if redflags:
        message += f'\n\n*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–¥—Ñ–ª–∞–≥–æ–≤ ‚Äî *{redflags}.\n'
    return message


def current_group_detailing_nps_message(info):
    if not info:
        logger.info("No group detailing info.")
        return ""

    result = f"\n\n\nüìå *–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –≥—Ä—É–ø–ø–∞–º*\n\n"
    info = info.split("\n")
    table = []
    groups_re = \
        r'^((?:\-[a-zA-Z]|[\s\/+a-zA-Z–ê-–Ø–∞-—è—ë–Å])+)(?:-\d)?(?:_base_\d*|_spec_\d*)?(?:[_\w,]+?)?-((?:\w+,?)+)-(?:(\d\d/\d\d)|(\d\d)).*$'
    for line in info:
        # line = [FORMAT_base_1-M204-21/22-I\t90,54%]
        if line == "":
            continue
        line = line.split("\t")
        group = findall(groups_re, line[0])
        logger.debug(group)
        logger.debug(line)
        table.append((f"{group[0][0]}‚Äî{group[0][1]}", line[1]))
    result = result + "`" + tabulate(table, headers=["–ì—Ä—É–ø–ø–∞", "NPS"]) + "`"

    return result


grade_3_emoji = "üòÉüòÑüòÅüòÄü•∞üòçü§†"
grade_2_emoji = "üôÇüôÉüòäüòåü§óüòâ"
grade_1_emoji = "ü§®ü•∏üßêüò∂ü§îüôÑ"
grade_0_emoji = "üòîüòíüòïüôÅüòìüò∂üòµ‚Äçüí´"
grade_emoji = (grade_0_emoji, grade_1_emoji, grade_2_emoji, grade_3_emoji)

def grade_info_message(info, actual_sem=False):
    if not info:
        return ""
    grade = info[0]
    if int(grade) != 0:
        result = f"\n\n*–£ –≤–∞—Å –ø—Ä–µ–º–∏—è {grade} –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.* "
    else:
        result = f"\n\n*–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–µ–º–∏—é –≤ —ç—Ç–æ–º —Å–µ–º–µ—Å—Ç—Ä–µ.*"
    if actual_sem:
        result += f"\n" \
                  f"üí≠ `{evaluation_indicator_message(grade=int(grade))}`"
        result += f"\n[–°—Ç–∞—Ç—å—è –æ —Ç–æ–º, –∫–∞–∫ —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏]" \
                  f"({GRADE_INFO_STATE_LINK})."
    return result
